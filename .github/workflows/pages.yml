# Build & deploy a Vite-powered Jekyll site to GitHub Pages
name: Build and Deploy Site

on:
  push:
    branches: [ "main" ]     # build on every push to main
  workflow_dispatch:         # allow manual runs

permissions:
  contents: read
  pages: write
  id-token: write            # required for deploy-pages@v4

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1 ▸ Check out your repo
      - uses: actions/checkout@v4

      # 2 ▸ Node / Vite build (React assets)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - run: npm ci
      - run: npm run build            # produces dist/

      # 3 ▸ Ruby / Bundler (installs gems OUTSIDE vendor/)
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        env:
          BUNDLE_PATH: ".bundle"
        with:
          ruby-version: "3.3"
          bundler-cache: true

      - run: bundle install --jobs 4 --retry 3

      # 4 ▸ Configure and build with Jekyll
      - uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: .
          destination: ./_site

      # 5 ▸ Copy Vite output into the final site and bypass Jekyll on Pages
      - name: Copy Vite build into _site
        run: |
          cp -R dist/* _site/
          touch _site/.nojekyll       # prevents extra Jekyll pass on Pages

      # 6 ▸ Upload the static site as a Pages artifact
      - uses: actions/upload-pages-artifact@v3
        with:
          path: _site                 # everything under _site goes to Pages

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
